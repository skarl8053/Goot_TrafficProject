<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />
	<!-- resource 추가 (남기문) / tile 관련 -->
	<resources mapping="user/resources/**" location="/resources/" />
	<resources mapping="admin/resources/**" location="/resources/" />

	<!-- Tiles 설정 -->
   <beans:bean id="tilesConfigurer" class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">
      <beans:property name="definitions">
         <beans:list>
         	<!-- src/main/resources 패키지 -> tiles의 xml 파일을 참조하겠다는 의미임.. -->
            <beans:value>classpath:tiles/*.xml</beans:value>
         </beans:list>
      </beans:property>
      <beans:property name="preparerFactoryClass" 
      value="org.springframework.web.servlet.view.tiles3.SpringBeanPreparerFactory" />
   </beans:bean>

   <beans:bean id="viewResolver" class="org.springframework.web.servlet.view.UrlBasedViewResolver">
      <beans:property name="viewClass" value="org.springframework.web.servlet.view.tiles3.TilesView"></beans:property>
      <beans:property name="order" value="1"/>
   </beans:bean>


	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<!-- MyBatis 설정 -->
	<beans:bean name="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<beans:property name="driverClassName" value="oracle.jdbc.driver.OracleDriver"/>
		<beans:property name="url" value="jdbc:oracle:thin:@localhost:1521:xe"/>
		<!-- <beans:property name="url" value="jdbc:oracle:thin:@172.16.4.5:1521:xe"/> -->
		<!-- <beans:property name="username" value="codetraffic"/>
		<beans:property name="password" value="123456"/> -->
		<beans:property name="username" value="hr"/>
		<beans:property name="password" value="123456"/>
	</beans:bean>
	<beans:bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<beans:property name="dataSource" ref="dataSource"/>
		<beans:property name="mapperLocations" value="classpath:com/traffic/dao/mapper/*.xml"/>
		
	</beans:bean>
	<beans:bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
		<beans:constructor-arg index="0" ref="sqlSessionFactory"/>
	</beans:bean>
	
	<!--  Multipart 설정 -->
	<!-- <beans:bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
    	<beans:property name="maxUploadSize" value="31457280" />   30MB의 크기 (30 * 1024 * 1024 = 31457280)
	</beans:bean> -->
	
	<!-- 컨트롤러로 지정할 패키지 목록 -->
	<context:component-scan base-package="com.tech.traffic" />
	<context:component-scan base-package="com.traffic.controller.main" />
	<context:component-scan base-package="com.traffic.controller.user" />
	
</beans:beans>
